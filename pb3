#!/usr/bin/env python
"""pinboard_search_cli for Python3

Usage:
    pb <name> [( , <name>)] [-o <number>...] 
    pb -u

Examples:
    pb linux            'linux' is what you search 
    pb linux , git      Search two tags, notice the space before ','
    pb linux -o 0       Open the first bookmark

Options:
    -h --help           Show this screen.
    -v --version        Show version
    -u --update         Update the local Pinboard's data
    -o --open           Open bookmarks with ordinal number
"""

from docopt import docopt
import io
import os
import pickle
from os.path import expanduser
home = expanduser('~')

def save_obj(obj, name):
    with open(home + '/.' + name + '.pkl', 'wb') as f:
        pickle.dump(obj, f, pickle.HIGHEST_PROTOCOL)

def load_obj(name):
    with open(home + '/.' + name + '.pkl', 'rb') as f:
        return pickle.load(f)

if __name__ == '__main__':
    arguments = docopt(__doc__, version='pinboard_search_cli 0.3')

if arguments['--update'] == True:
    # a = os.system('pinboard bookmarks > ~/.pinboard_data.json')
    print('Sorry, The pinboard package is not support for Python3.\n'
          'You should switch to Python2 and Run'
          '\n\n    ./pb -h\n\nif you want to update the local data.')

elif len(arguments['<name>']) >=1 & arguments['--open'] == False:
    import pandas as pd
    import prettytable

    df = pd.read_json('~/.pinboard_data.json')
    df1 = df.loc[:,['description','href','tags','time']]

    # Select the first 20 characters
    df1['description'] = df1.description.str.wrap(20)
    df1['description'] = df1.description.apply(lambda x: x[:20])
    df1['tags'] = df1.tags.apply(str.lower) #  Make the tags to lower
    
    pattern = '|'.join(arguments['<name>'])
    df2 = df1[df1.tags.str.contains(pattern, na=False)|
              df1.href.str.contains(pattern, na=False)]

    # Change the index
    count = df2.iloc[:,0].count()
    df2.index = range(count)
    
    # Print a pretty table
    output = io.StringIO()
    df2.loc[:,['description','tags']].to_csv(output, header=['站名','标签'])
    output.seek(0)
    pt = prettytable.from_csv(output)
    print(pt)
    df3 = df2['href'].to_dict()
    save_obj(df3,'pinboard_url')

else:
    href = load_obj('pinboard_url')
    for i in arguments['<number>']:
        os.system('cygstart %s' % href[int(i)])
